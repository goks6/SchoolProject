const TelegramBot = require('node-telegram-bot-api');

// Create bot instance
const token = process.env.TELEGRAM_BOT_TOKEN;

if (!token) {
    console.warn('тЪая╕П Telegram Bot Token not found. Telegram notifications will be disabled.');
}

const bot = token ? new TelegramBot(token, { polling: true }) : null;

if (bot) {
    // Handle /start command
    bot.onText(/\/start/, (msg) => {
        const chatId = msg.chat.id;
        const welcomeMessage = `
ЁЯЩП рдирдорд╕реНрдХрд╛рд░!
рдореА рддреБрдордЪреНрдпрд╛ рд╢рд╛рд│реЗрдЪрд╛ Attendance Bot рдЖрд╣реЗ.

рддреБрдордЪреНрдпрд╛ рдореБрд▓рд╛рдЪреНрдпрд╛ рд╢рд╛рд│реЗрддреАрд▓ рдорд╛рд╣рд┐рддреА рдорд┐рд│рд╡рдгреНрдпрд╛рд╕рд╛рдареА рддреБрдордЪрд╛ рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рдиреЛрдВрджрдгреАрдХреГрдд рдХрд░рд╛.

рдХреГрдкрдпрд╛ рддреБрдордЪрд╛ 10 рдЕрдВрдХреА рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рдкрд╛рдард╡рд╛:
(рдЙрджрд╛: 9876543210)
        `;
        bot.sendMessage(chatId, welcomeMessage);
    });

    // Handle mobile number registration
    bot.on('message', async (msg) => {
        const chatId = msg.chat.id;
        const text = msg.text;
        
        // Skip if it's a command
        if (text && text.startsWith('/')) return;
        
        // Check if it's a mobile number
        if (/^\d{10}$/.test(text)) {
            const db = require('./database');
            try {
                // Update student record with Telegram ID
                const [result] = await db.execute(
                    'UPDATE students SET parent_telegram_id = ? WHERE parent_mobile = ?',
                    [chatId.toString(), text]
                );
                
                if (result.affectedRows > 0) {
                    bot.sendMessage(chatId, 
                        `тЬЕ рддреБрдордЪрд╛ рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ ${text} рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдиреЛрдВрджрдгреАрдХреГрдд рдЭрд╛рд▓рд╛!\n\n` +
                        `рдЖрддрд╛ рддреБрдореНрд╣рд╛рд▓рд╛ рддреБрдордЪреНрдпрд╛ рдореБрд▓рд╛рдЪреНрдпрд╛ рд╣рдЬреЗрд░реА рдЖрдгрд┐ рд╢рд╛рд│реЗрдЪреНрдпрд╛ рд╕реВрдЪрдирд╛ рдпрд╛ Telegram рджреНрд╡рд╛рд░реЗ рдорд┐рд│рддреАрд▓.`
                    );
                } else {
                    bot.sendMessage(chatId, 
                        `тЭМ рд╣рд╛ рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рдЖрдордЪреНрдпрд╛ рдпрд╛рджреАрдд рдирд╛рд╣реА.\n\n` +
                        `рдХреГрдкрдпрд╛ рд╢рд╛рд│реЗрдд рдиреЛрдВрджрдгреАрдХреГрдд рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рд╡рд╛рдкрд░рд╛ рдХрд┐рдВрд╡рд╛ рддреБрдордЪреНрдпрд╛ рд╢рд╛рд│реЗрд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.`
                    );
                }
            } catch (error) {
                console.error('Telegram registration error:', error);
                bot.sendMessage(chatId, 'тЭМ рдиреЛрдВрджрдгреА рдХрд░рддрд╛рдирд╛ рддреНрд░реБрдЯреА. рдХреГрдкрдпрд╛ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.');
            }
        } else if (text && text.length > 0) {
            bot.sendMessage(chatId, 
                'тЪая╕П рдХреГрдкрдпрд╛ рдлрдХреНрдд 10 рдЕрдВрдХреА рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рдкрд╛рдард╡рд╛.\n' +
                'рдЙрджрд╛: 9876543210'
            );
        }
    });

    // Handle /help command
    bot.onText(/\/help/, (msg) => {
        const chatId = msg.chat.id;
        const helpMessage = `
ЁЯУЪ рдорджрдд:

1. /start - рдиреЛрдВрджрдгреА рдкреНрд░рдХреНрд░рд┐рдпрд╛ рд╕реБрд░реВ рдХрд░рд╛
2. /help - рдорджрдд рд╕рдВрджреЗрд╢
3. /status - рддреБрдордЪреА рдиреЛрдВрджрдгреА рд╕реНрдерд┐рддреА

рддреБрдордЪрд╛ рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рдиреЛрдВрджрдгреАрдХреГрдд рдХреЗрд▓реНрдпрд╛рдирдВрддрд░ рддреБрдореНрд╣рд╛рд▓рд╛ рдорд┐рд│реЗрд▓:
- рджреИрдирдВрджрд┐рди рд╣рдЬреЗрд░реА рдЕрдкрдбреЗрдЯ
- рдЕрднреНрдпрд╛рд╕ рдЖрдгрд┐ рдЧреГрд╣рдкрд╛рда
- рд╢рд╛рд│реЗрдЪреНрдпрд╛ рдорд╣рддреНрд╡рд╛рдЪреНрдпрд╛ рд╕реВрдЪрдирд╛

рдХреЛрдгрддреАрд╣реА рд╕рдорд╕реНрдпрд╛ рдЕрд╕рд▓реНрдпрд╛рд╕ рддреБрдордЪреНрдпрд╛ рд╢рд╛рд│реЗрд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.
        `;
        bot.sendMessage(chatId, helpMessage);
    });

    // Handle /status command
    bot.onText(/\/status/, async (msg) => {
        const chatId = msg.chat.id;
        const db = require('./database');
        
        try {
            const [students] = await db.execute(
                'SELECT name, class, division FROM students WHERE parent_telegram_id = ?',
                [chatId.toString()]
            );
            
            if (students.length > 0) {
                let statusMessage = 'тЬЕ рддреБрдордЪреА рдиреЛрдВрджрдгреА рд╕реНрдерд┐рддреА:\n\n';
                students.forEach(student => {
                    statusMessage += `ЁЯСж ${student.name}\n`;
                    statusMessage += `ЁЯУЪ рдЗрдпрддреНрддрд╛: ${student.class}-${student.division}\n\n`;
                });
                bot.sendMessage(chatId, statusMessage);
            } else {
                bot.sendMessage(chatId, 
                    'тЭМ рддреБрдордЪрд╛ рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░ рдЕрджреНрдпрд╛рдк рдиреЛрдВрджрдгреАрдХреГрдд рдирд╛рд╣реА.\n\n' +
                    '/start рджреНрд╡рд╛рд░реЗ рдиреЛрдВрджрдгреА рдХрд░рд╛.'
                );
            }
        } catch (error) {
            console.error('Status check error:', error);
            bot.sendMessage(chatId, 'тЭМ рд╕реНрдерд┐рддреА рддрдкрд╛рд╕рддрд╛рдирд╛ рддреНрд░реБрдЯреА.');
        }
    });

    console.log('тЬЕ Telegram Bot is active');
} else {
    console.log('тЪая╕П Telegram Bot is disabled (no token provided)');
}

module.exports = bot;